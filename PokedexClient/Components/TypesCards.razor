<div class="types-container">
	@foreach (var type in TypesBackground)
	{
		<CardTemplate BackgroundColor="@type.Value">
			<Title>
				<a @onclick=@(async () => {await OnClickedType(type.Key);}) class="card-title-link">@type.Key.ToUpper()</a>
			</Title>
			
		</CardTemplate>
	}
</div>
@code {

	public Dictionary<string, string> TypesBackground = new Dictionary<string, string>()
	{
		{"Bug","var(--bug-green)"},
		{"Dragon", "var(--dragon-teal)"},
		{"Dark", "var(--dark-marine)"},
		{"Electric", "var(--electric-yellow)"},
		{ "Fairy","var(--fairy-pink)"},
		{"Fighting", "var(--fighting-orange)"},
		{"Fire", "var(--fire-orange)"},
		{"Flying", "var(--flying-blue)"},
		{"Ghost", "var(--ghost-purple)"},
		{"Ground", "var(--ground-brown)"},
		{"Grass", "var(--grass-green)"},
		{"Ice", "var(--ice-blue)"},
		{"Normal", "var(--normal-gray)"},
		{"Poison", "var(--poison-purple)"},
		{"Psychic", "var(--psychic-pink)"},
		{"Rock", "var(--rock-brown)"},
		{"Steel", "var(--steel-gray)"},
		{"Water", "var(--water-blue)"},

	};
	

	public async Task OnClickedType(string type)
	{
		Appstate.CurrentType = await PokeapiService.GetPokemonTypesAsync(type.ToLower());
		Appstate.ChildContentMode = "typeinfo";
		Navman.NavigateTo("/redirect", false);
	}

}
